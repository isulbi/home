import{av as g,an as m}from"./iconBase-aU38M3cF.js";import{a as s,p as x}from"./chunk-B7RQU5TL-CiCaBc_Y.js";function h(r,t){return`${r} returned \`undefined\`. Seems you forgot to wrap component within ${t}`}function y(r={}){const{name:t,strict:n=!0,hookName:e="useContext",providerName:o="Provider",errorMessage:i,defaultValue:f}=r,a=s.createContext(f);a.displayName=t;function c(){var d;const l=s.useContext(a);if(!l&&n){const u=new Error(i??h(e,o));throw u.name="ContextError",(d=Error.captureStackTrace)==null||d.call(Error,u,c),u}return l}return[a.Provider,c,a]}function C(...r){return t=>{const n=[];for(const e of r)if(typeof e=="function"){const o=e(t);typeof o=="function"&&n.push(o)}else e&&(e.current=t);if(n.length)return()=>{for(const e of n)e()}}}function w(r){var e,o;let t=(e=Object.getOwnPropertyDescriptor(r.props,"ref"))==null?void 0:e.get,n=t&&"isReactWarning"in t&&t.isReactWarning;return n?r.ref:(t=(o=Object.getOwnPropertyDescriptor(r,"ref"))==null?void 0:o.get,n=t&&"isReactWarning"in t&&t.isReactWarning,n?r.props.ref:r.props.ref||r.ref)}const p=r=>{const t=s.memo(s.forwardRef((n,e)=>{const{asChild:o,children:i,...f}=n;if(!o)return s.createElement(r,{...f,ref:e},i);if(!s.isValidElement(i))return null;const a=s.Children.only(i),c=w(a);return s.cloneElement(a,{...g(f,a.props),ref:e?C(e,c):c})}));return t.displayName=r.displayName||r.name,t},E=()=>{const r=new Map;return new Proxy(p,{apply(t,n,e){return p(e[0])},get(t,n){const e=n;return r.has(e)||r.set(e,p(e)),r.get(e)}})},k=E(),[v,N]=y({name:"FieldContext",hookName:"useFieldContext",providerName:"<FieldProvider />",strict:!1}),F=s.forwardRef(function(t,n){return x.jsx(m,{align:"center",...t,direction:"row",ref:n})});export{F as H,k as a,C as b,y as c,N as u};
