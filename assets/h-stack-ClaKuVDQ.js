import{a as s,p as d}from"./chunk-B7RQU5TL-CiCaBc_Y.js";import{av as m,an as h}from"./stack-HLCirhyA.js";function x(t,e){return`${t} returned \`undefined\`. Seems you forgot to wrap component within ${e}`}function P(t={}){const{name:e,strict:n=!0,hookName:r="useContext",providerName:o="Provider",errorMessage:c,defaultValue:f}=t,a=s.createContext(f);a.displayName=e;function i(){var g;const l=s.useContext(a);if(!l&&n){const u=new Error(c??x(r,o));throw u.name="ContextError",(g=Error.captureStackTrace)==null||g.call(Error,u,i),u}return l}return[a.Provider,i,a]}function y(...t){return e=>{const n=[];for(const r of t)if(typeof r=="function"){const o=r(e);typeof o=="function"&&n.push(o)}else r&&(r.current=e);if(n.length)return()=>{for(const r of n)r()}}}function w(t){var r,o;let e=(r=Object.getOwnPropertyDescriptor(t.props,"ref"))==null?void 0:r.get,n=e&&"isReactWarning"in e&&e.isReactWarning;return n?t.ref:(e=(o=Object.getOwnPropertyDescriptor(t,"ref"))==null?void 0:o.get,n=e&&"isReactWarning"in e&&e.isReactWarning,n?t.props.ref:t.props.ref||t.ref)}const p=t=>{const e=s.memo(s.forwardRef((n,r)=>{const{asChild:o,children:c,...f}=n;if(!o)return s.createElement(t,{...f,ref:r},c);if(!s.isValidElement(c))return null;const a=s.Children.only(c),i=w(a);return s.cloneElement(a,{...m(f,a.props),ref:r?y(r,i):i})}));return e.displayName=t.displayName||t.name,e},C=()=>{const t=new Map;return new Proxy(p,{apply(e,n,r){return p(r[0])},get(e,n){const r=n;return t.has(r)||t.set(r,p(r)),t.get(r)}})},k=C(),j=s.forwardRef(function(e,n){return d.jsx(h,{align:"center",...e,direction:"row",ref:n})});export{j as H,k as a,y as b,P as c};
